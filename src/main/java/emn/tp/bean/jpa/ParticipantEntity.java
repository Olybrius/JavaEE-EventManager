/*
 * Created on 20 oct. 2014 ( Time 21:44:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package emn.tp.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "PARTICIPANT"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="PARTICIPANT", schema="APP" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ParticipantEntity.countAll", query="SELECT COUNT(x) FROM ParticipantEntity x" )
} )
public class ParticipantEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="MAIL", nullable=false, length=30)
    private String     mail         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="NAME", nullable=false, length=30)
    private String     name         ;

    @Column(name="FIRSTNAME", nullable=false, length=30)
    private String     firstname    ;

    @Column(name="COMPANY", length=30)
    private String     company      ;

	// "eventid" (column "EVENTID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="EVENTID", referencedColumnName="EVENTID")
    private EventsEntity events      ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ParticipantEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setMail( String mail ) {
        this.mail = mail ;
    }
    public String getMail() {
        return this.mail;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : NAME ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : FIRSTNAME ( VARCHAR ) 
    public void setFirstname( String firstname ) {
        this.firstname = firstname;
    }
    public String getFirstname() {
        return this.firstname;
    }

    //--- DATABASE MAPPING : COMPANY ( VARCHAR ) 
    public void setCompany( String company ) {
        this.company = company;
    }
    public String getCompany() {
        return this.company;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setEvents( EventsEntity events ) {
        this.events = events;
    }
    public EventsEntity getEvents() {
        return this.events;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(mail);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(firstname);
        sb.append("|");
        sb.append(company);
        return sb.toString(); 
    } 

}
