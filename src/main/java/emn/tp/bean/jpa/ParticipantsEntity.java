/*
 * Created on 27 oct. 2014 ( Time 13:31:44 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package emn.tp.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "PARTICIPANTS"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="PARTICIPANTS", schema="APP" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ParticipantsEntity.countAll", query="SELECT COUNT(x) FROM ParticipantsEntity x" )
} )
public class ParticipantsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="MAIL", nullable=false, length=30)
    private String     mail         ;

    @Column(name="PSEUDO", nullable=false, length=30)
    private String     pseudo       ;

    @Column(name="FIRSTNAME", nullable=false, length=30)
    private String     firstname    ;

    @Column(name="COMPANY", nullable=false, length=30)
    private String     company      ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(targetEntity=EventsEntity.class)
    @JoinTable(name="PARTICIPATE", 
      joinColumns=@JoinColumn(name="PARTICIPANTID", referencedColumnName="ID"),
      inverseJoinColumns=@JoinColumn(name="EVENTID", referencedColumnName="ID")
     ) 

    private List<EventsEntity> listOfEvents;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ParticipantsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : MAIL ( VARCHAR ) 
    public void setMail( String mail ) {
        this.mail = mail;
    }
    public String getMail() {
        return this.mail;
    }

    //--- DATABASE MAPPING : PSEUDO ( VARCHAR ) 
    public void setPseudo( String pseudo ) {
        this.pseudo = pseudo;
    }
    public String getPseudo() {
        return this.pseudo;
    }

    //--- DATABASE MAPPING : FIRSTNAME ( VARCHAR ) 
    public void setFirstname( String firstname ) {
        this.firstname = firstname;
    }
    public String getFirstname() {
        return this.firstname;
    }

    //--- DATABASE MAPPING : COMPANY ( VARCHAR ) 
    public void setCompany( String company ) {
        this.company = company;
    }
    public String getCompany() {
        return this.company;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfEvents( List<EventsEntity> listOfEvents ) {
        this.listOfEvents = listOfEvents;
    }
    public List<EventsEntity> getListOfEvents() {
        return this.listOfEvents;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(mail);
        sb.append("|");
        sb.append(pseudo);
        sb.append("|");
        sb.append(firstname);
        sb.append("|");
        sb.append(company);
        return sb.toString(); 
    } 

}
